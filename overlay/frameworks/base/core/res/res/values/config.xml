<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2009 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Flag indicating whether the surface flinger is inefficient
        at performing a blur.  Used by parts of the UI to turn off
        the blur effect where it isn't worth the performance hit. -->
    <bool name="config_sf_slowBlur">true</bool>

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager connection type],
         [associated radio-type],[priority]  -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1"</item>
        <item>"mobile,0,0,0"</item>
    </string-array>

    <!-- Boolean indicating if we require the use of DUN on mobile for tethering.
         Note that this defaults to false so that if you move to a carrier that
         hasn't configured anything tethering will still work.  If you'd rather
         make the device untetherable on unconfigured devices, set to true -->
    <bool translatable="false" name="config_tether_dun_required">true</bool>

    <!-- Indicate whether the SD card is accessible without removing the battery. -->
    <bool name="config_batterySdCardAccessibility">true</bool>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>
    
    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>0</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about booting with safe mode disabled -->
    <integer-array name="config_safeModeDisabledVibePattern">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about booting with safe mode disabled -->
    <integer-array name="config_safeModeEnabledVibePattern">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about hitting a scroll barrier -->
    <integer-array name="config_scrollBarrierVibePattern">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about on a key release -->
    <integer-array name="config_virtualKeyUpPattern">
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Default color for notification LED. -->
    <color name="config_defaultNotificationColor">#00000000</color>

    <!-- Default LED on time for notification LED in milliseconds. -->
    <integer name="config_defaultNotificationLedOn">0</integer>

    <!-- Default LED off time for notification LED in milliseconds. -->
    <integer name="config_defaultNotificationLedOff">0</integer>

    <!-- Component name of the service providing network location support. -->
    <string name="config_networkLocationProvider">com.google.android.location.NetworkLocationProvider</string>

    <!-- Component name of the service providing geocoder API support. -->
    <string name="config_geocodeProvider">com.google.android.location.GeocodeProvider</string>

    <!-- Boolean indicating if current platform supports bluetooth SCO for off call
    use cases -->
    <bool name="config_bluetooth_sco_off_call">true</bool>

    <!-- The default iface on which to monitor data use -->
    <string name="config_datause_iface">tiwlan0</string>

    <!-- Enable the screen-off animation -->
    <bool name="config_enableScreenOffAnimation">false</bool>

    <!-- The duration (in milliseconds) that the radio will scan for a signal
    when there's no network connection. If the scan doesn't timeout, use zero -->
    <integer name="config_radioScanningTimeout">1</integer>

    <!-- Configure rotary outer radius -->
    <integer name="config_rotaryOuterRadiusDIP">1020</integer>

    <!-- toggles weather device is tablet or phone. right now,
    tablets are know to have soft buttons, but phones have harware
    buttons. this might change in the future - especially when the
    honeycomb modifications become available for phones -->
    <bool name="cm_default_is_tablet">true</bool>

    <!-- toggles weather device uses soft buttons or got hardware
    buttons. as the time of writing for android 2.3.3. all soft button
    enabled devices are tablets, all disabled are phones. -->
    <bool name="cm_default_has_soft_buttons">true</bool>

    <!-- if true, status bar is shown on bottom by default -->
    <bool name="cm_default_bottom_status_bar">true</bool>
    <!-- if true, dead zone is activated, which disables pull
    out of the status bar on the middle area - i.e. for people
    who start drag-out events accidently while trying to hit
    the space key -->
    <bool name="cm_default_use_dead_zone">false</bool>
    <!-- if true, soft buttons shown on left, false show them on
    right side of status bar -->
    <bool name="cm_default_soft_buttons_left">true</bool>

    <!-- toggle which buttons to show if soft buttons enabled
    quickna: opens notification area with the press of one button
    instead of swiping the long way up/down on big tablets -->
    <bool name="cm_default_show_soft_home">false</bool>
    <bool name="cm_default_show_soft_menu">true</bool>
    <bool name="cm_default_show_soft_back">true</bool>
    <bool name="cm_default_show_soft_search">true</bool>
    <bool name="cm_default_show_soft_quick_na">true</bool>

    <!-- disables display of lockscreen both on boot as on
    power button press to wake devices. usful for devices you
    dont carry in pockets -->
    <bool name="cm_default_disable_lockscreen">true</bool>
    <!--  option only available for devices with soft buttons.
    when enabled, fullscreen apps show the status bar. status
    bar then gets an adition hide button to switch to real
    fullscreen  -->
    <bool name="cm_default_disable_fullscreen">true</bool>

    <!-- toggles which button to use to unhide the status bar
    to show soft buttons again (see last comment). this is an
    index. to know, which index matches which button, see
    arrays.xml of CMParts. at the bottom of this file, menu
    entries like "menu, back, home" are mapped to indexes -->
    <integer name="cm_default_unhide_button_index">2</integer>

    <!-- when enabled, the power menu (shown when long-pressing
    power... includes reboot and power off) is extended by
    some more options which reflect the soft keys. ignored if soft
    keys are disabled -->
    <bool name="cm_default_extend_power_menu">true</bool>

    <!--  toggles which buttons to show on extended power menu -->
    <bool name="cm_default_power_menu_home">true</bool>
    <bool name="cm_default_power_menu_menu">true</bool>
    <bool name="cm_default_power_menu_back">false</bool>

    <!--  toggles behavior of volume buttons. default (false) triggers
    volume change when pressing, user action when long-pressing. enabling
    (true) this option reverses this behavior -->
    <bool name="cm_default_reverse_volume_behavior">false</bool>
    <!-- defines the action of the volume buttons. for volume up,
    volume down, both press and both long-press. this is an
    index. to know, which index matches which button, see
    arrays.xml of CMParts. at the bottom of that file, menu
    entries like "menu, back, home" are mapped to indexes -->
    <integer name="cm_default_remapped_long_vol_up_index">8</integer>
    <integer name="cm_default_remapped_long_vol_down_index">4</integer>
    <integer name="cm_default_remapped_both_vol_index">1</integer>
    <integer name="cm_default_remapped_long_both_vol_index">11</integer>

</resources>
